{"version":3,"sources":["components/Canvas.js","App.js","index.js"],"names":["Canvas","methods","_webcamRef$current","_webcamRef$current$vi","webcamRef","useRef","_useState","useState","_useState2","_slicedToArray","isMouseDown","setIsMouseDown","_useState3","x","y","_useState4","prevCoords","setPrevCoords","_useState5","_useState6","currCoords","setCurrCoords","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","isLoadingDrawing","setIsLoadingDrawing","canvasHandsDetectionRef","handsDetection","Hands","locateFile","file","concat","VERSION","onResultsHandsDetection","results","currentWebcam","current","canvasCurrent","videoWidth","video","videoHeight","width","height","multiHandLandmarks","length","indexFinger","clientWidth","clientHeight","_step","ctx","getContext","_iterator","_createForOfIteratorHelper","s","n","done","landmarks","value","drawLandmarks","color","fillColor","radius","data","_data$from","lerp","from","z","err","e","f","restore","useEffect","setOptions","maxNumHands","modelComplexity","minDetectionConfidence","minTrackingConfidence","onResults","camera","Camera","onFrame","_onFrame","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","send","image","stop","apply","arguments","start","document","querySelector","textContent","readyState","x1","y1","x2","y2","frames","dx","dy","animate","event","MouseEvent","view","window","bubbles","cancelable","screenX","screenY","clientX","clientY","dispatchEvent","requestAnimationFrame","_jsxs","className","children","_jsx","SignaturePad","clearButton","options","minWidth","maxWidth","ref","Webcam","mirrored","App","rootElement","getElementById","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.f0624dc6.chunk.js","sourcesContent":["import './Canvas.css'\r\nimport Webcam from \"react-webcam\"\r\nimport { useCallback, useRef, useState, useEffect } from \"react\"\r\nimport SignaturePad from 'react-signature-pad'\r\nimport { Hands, VERSION } from '@mediapipe/hands'\r\nimport { drawLandmarks, lerp } from '@mediapipe/drawing_utils'\r\nimport { Camera } from \"@mediapipe/camera_utils\"\r\n\r\n\r\nexport default function Canvas(methods) {\r\n  const webcamRef = useRef(null);\r\n  const [isMouseDown, setIsMouseDown] = useState(false)\r\n  const [prevCoords, setPrevCoords] = useState({ x: 0, y: 0 })\r\n  const [currCoords, setCurrCoords] = useState({ x: 0, y: 0 })\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isLoadingDrawing, setIsLoadingDrawing] = useState(true)\r\n\r\n  const canvasHandsDetectionRef = useRef(null);\r\n  const handsDetection = new Hands({\r\n    locateFile: (file) =>\r\n      `https://cdn.jsdelivr.net/npm/@mediapipe/hands@${VERSION}/${file}`,\r\n  });\r\n\r\n  const onResultsHandsDetection = (results) => {\r\n    setIsLoading(false)\r\n    if (results) {\r\n      const currentWebcam = webcamRef.current;\r\n      const canvasCurrent = canvasHandsDetectionRef.current;\r\n      const videoWidth = currentWebcam.video.videoWidth;\r\n      const videoHeight = currentWebcam.video.videoHeight;\r\n      canvasCurrent.width = videoWidth;\r\n      canvasCurrent.height = videoHeight;\r\n      if (results.multiHandLandmarks && results.multiHandLandmarks.length > 0) {\r\n        const indexFinger = results.multiHandLandmarks[0][8]\r\n        const clientWidth = canvasCurrent.clientWidth\r\n        const clientHeight = canvasCurrent.clientHeight\r\n        setCurrCoords({ x: (1 - indexFinger.x) * clientWidth, y: indexFinger.y * clientHeight })\r\n\r\n        const ctx = canvasCurrent.getContext(\"2d\");\r\n        for (const landmarks of results.multiHandLandmarks) {\r\n          drawLandmarks(ctx, landmarks, {\r\n            color: '#FF0000',\r\n            fillColor: '#00FF00',\r\n            radius: (data) => {\r\n              return lerp(data.from?.z, -0.15, 0.1, 5, 1);\r\n            },\r\n          });\r\n        }\r\n\r\n        setIsMouseDown(true)\r\n\r\n        setPrevCoords({ x: (1 - indexFinger.x) * clientWidth, y: indexFinger.y * clientHeight })\r\n\r\n\r\n        ctx.restore();\r\n      }\r\n      else {\r\n        setIsMouseDown(false)\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    handsDetection.setOptions({\r\n      maxNumHands: 2,\r\n      modelComplexity: 1,\r\n      minDetectionConfidence: 0.5,\r\n      minTrackingConfidence: 0.5,\r\n    });\r\n    handsDetection.onResults(onResultsHandsDetection);\r\n    const currentWebcam = webcamRef.current;\r\n    if (typeof currentWebcam !== \"undefined\" && currentWebcam !== null) {\r\n      let camera;\r\n      camera = new Camera(currentWebcam?.video, {\r\n        onFrame: async () => {\r\n          await handsDetection.send({ image: currentWebcam?.video });\r\n        },\r\n        width: currentWebcam.video.width,\r\n        height: currentWebcam.video.height,\r\n      });\r\n      camera.start();\r\n    }\r\n\r\n    const btnElement = document.querySelector('.btn-default')\r\n    btnElement.textContent = 'Очистить доску'\r\n  }, [webcamRef.current?.video?.readyState]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      return\r\n    }\r\n    var x1 = prevCoords.x;\r\n    var y1 = prevCoords.y;\r\n    var x2 = currCoords.x;\r\n    var y2 = currCoords.y;\r\n    var frames = 1;\r\n    const dx = (x2 - x1) / frames;\r\n    const dy = (y2 - y1) / frames;\r\n\r\n\r\n    function animate() {\r\n      x1 += dx;\r\n      y1 += dy;\r\n\r\n      const event = new MouseEvent('mousemove', {\r\n        view: window,\r\n        bubbles: true,\r\n        cancelable: true,\r\n        screenX: x1,\r\n        screenY: y1,\r\n        clientX: x1,\r\n        clientY: y1\r\n      });\r\n\r\n      const element = document.querySelector('#signature-pad canvas');\r\n      element.dispatchEvent(event);\r\n\r\n      if (frames > 0) {\r\n        frames--;\r\n        requestAnimationFrame(animate);\r\n      }\r\n    }\r\n\r\n    animate();\r\n\r\n    setIsLoadingDrawing(false)\r\n  }, [currCoords])\r\n\r\n\r\n  useEffect(() => {\r\n    if (isMouseDown) {\r\n      const event = new MouseEvent('mousedown', {\r\n        clientX: currCoords.x, // координата X\r\n        clientY: currCoords.y // координата Y\r\n      });\r\n\r\n      // Получаем элемент, на который нужно вызвать событие\r\n      const element = document.querySelector('#signature-pad canvas');\r\n\r\n      // Вызываем событие mousedown на элементе с указанными координатами\r\n      element.dispatchEvent(event);\r\n    }\r\n    else {\r\n      const event = new MouseEvent('mouseup', {\r\n        clientX: currCoords.x, // координата X\r\n        clientY: currCoords.y // координата Y\r\n      })\r\n      const element = document.querySelector('#signature-pad canvas');\r\n      element.dispatchEvent(event);\r\n\r\n    }\r\n\r\n  }, [isMouseDown])\r\n\r\n\r\n  return (\r\n    <div className=\"canvas\">\r\n      <SignaturePad clearButton=\"true\" options={{\r\n        minWidth: 0.5,\r\n        maxWidth: 6,\r\n      }} />\r\n      <canvas\r\n        className='canvas-hands'\r\n        ref={canvasHandsDetectionRef}\r\n      />\r\n      <Webcam className='webcam' mirrored={true} ref={webcamRef} />\r\n      {isLoading && (<h2>Подождите, идет загрузка</h2>)}\r\n      {!isLoading && isLoadingDrawing && (<h2>Помашите рукой для подгрузки доски</h2>)}\r\n    </div>\r\n  )\r\n}\r\n","import \"./styles.css\";\r\nimport Canvas from \"./components/Canvas\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"page\">\r\n      <Canvas />\r\n    </div>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\n\r\nroot.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>\r\n);"],"sourceRoot":""}